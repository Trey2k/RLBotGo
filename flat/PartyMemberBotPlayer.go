// automatically generated by the FlatBuffers compiler, do not modify

package flat

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// A player that Rocket League treats as human, e.g. has a dedicated camera and can do training mode,
/// but is actually controlled by a bot.
type PartyMemberBotPlayer struct {
	_tab flatbuffers.Table
}

func GetRootAsPartyMemberBotPlayer(buf []byte, offset flatbuffers.UOffsetT) *PartyMemberBotPlayer {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &PartyMemberBotPlayer{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *PartyMemberBotPlayer) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *PartyMemberBotPlayer) Table() flatbuffers.Table {
	return rcv._tab
}

func PartyMemberBotPlayerStart(builder *flatbuffers.Builder) {
	builder.StartObject(0)
}
func PartyMemberBotPlayerEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
